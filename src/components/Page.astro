---
import Item from "./Item.astro";
import type { MenuItem, MenuPage } from "@/types/menu";
import FloatingButton from "./Buttons/FloatingButton.astro";
import Navigation from "./Navigation.astro";
import type { IMenu } from "@/types/menu";
interface Props {
  id: string;
  menu: IMenu;
  items: MenuItem[];
  baseUrl: string;
  showNavigation?: boolean;
}

const {
  id,
  items = [],
  menu,
  baseUrl,
  showNavigation = true,
} = Astro.props;

const settings = {
  showPrices: menu?.settings?.showPrices ?? true,
  showImages: menu?.settings?.showImages ?? true,
  showDescriptions: menu?.settings?.showDescriptions ?? true,
};
const isSinglePage = menu?.type === "single-page";

const allSections =
  menu?.pages?.flatMap((page: MenuPage) => {
    return page.items
      .filter((item: MenuItem) => item.type === "section")
      .map((section: MenuItem) => ({
        id: `section-${section.id}`,
        name: section.name,
        pageId: page.id,
      }));
  }) || [];

const pageSections = items.filter((item) => item.type === "section");

// Generate unique IDs for sections based on their names
const pageSectionIds = pageSections.map((section) => ({
  id: `section-${section.id}`,
  name: section.name,
  pageId: id,
}));

// Determine which sections to display in the navigation
// For single-page menu, use allSections (passed from Menu component)
// For multi-page menu, use only the sections from the current page
const navigationSections =
  isSinglePage ? allSections : pageSectionIds;
---

<main
  id={`page-${id}`}
  class="min-h-screen flex flex-col gap-4"
>
  {
    showNavigation && navigationSections.length > 0 && (
      <Navigation sections={navigationSections} />
    )
  }

  <ul class="flex flex-col gap-3 p-3">
    {
      items.map((item, index) => {
        // For section items, add an ID to use as scroll target
        const sectionId = item.type === "section" ? `section-${item.id}` : "";
        return (
          <div
            id={sectionId}
            class={item.type === "section" ? "scroll-mt-16 not-first:mt-4" : ""}
          >
            <Item item={item} settings={settings} />
          </div>
        );
      })
    }
  </ul>
  {!isSinglePage && <FloatingButton href={baseUrl} />}
</main>
