---
import { Image } from "astro:assets";
import type { MenuItem } from "@/types/menu";

// Define the props for the Item component
interface Props {
  item?: MenuItem;
  settings: {
    showPrices: boolean;
    showImages: boolean;
    showDescriptions: boolean;
  };
}

// Destructure the props
const { item, settings } = Astro.props;

const { name, price, image_url, description, is_available } = item || {};
const { showPrices, showImages, showDescriptions } = settings;

// Helper function to format price
const formatPrice = (price: number) => {
  return new Intl.NumberFormat("es-CL", {
    style: "currency",
    currency: "CLP",
    maximumFractionDigits: 0,
  }).format(price);
};

// Create a JSON string with the item data for the modal
const itemData = item ? JSON.stringify({
  name,
  price,
  image_url,
  description,
  showPrices,
  showImages,
  showDescriptions
}) : null;
---

{item?.type === "item" && (
  <>
    <li
      class="menu-item flex w-full justify-between items-center gap-4 rounded-md bg-white border border-primary-200"
    >
      {
        showImages && image_url && (
          <div class="h-full rounded-md overflow-hidden shrink-0">
            <Image
              class="object-cover object-center h-[100px] w-[100px]"
              src={image_url}
              alt={name || ""}
              width={100}
              height={100}
              inferSize
            />
          </div>
        )
      }
      <div class="flex flex-col gap-2 grow">
        <h3 class="font-bold">{name}</h3>
        {showDescriptions && description && <p class="text-xs line-clamp-2">{description}</p>}
      </div>
      {
        showPrices && price !== null && price !== undefined && (
          <div class="flex flex-col gap-2 shrink-0">
            <p class="text-lg px-4 font-bold">{formatPrice(price)}</p>
            <button
              data-item={itemData}
              data-modal-trigger="shared-modal"
              class="rounded-md bg-primary-600 px-2.5 py-1.5 text-sm font-semibold text-white hover:bg-primary-700 mx-4"
            >
              See details
            </button>
          </div>
        )
      }
      <!-- {!is_available && <p>Not Available</p>} -->
    </li>
  </>
)}

{item?.type === "section" && (
    <li class="flex w-full rounded-md bg-primary-200 p-4">
      <div class="flex flex-col gap-2 grow">
        <h3 class="font-bold">{name}</h3>
        {showDescriptions && description && <p class="text-xs">{description}</p>}
      </div>
    </li>
)}
  
