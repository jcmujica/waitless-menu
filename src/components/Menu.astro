---
import type { IMenu, MenuPage } from "@/types/menu";
import Page from "./Page.astro";
import Footer from "./Footer.astro";
import Home from "./Home.astro";

interface Props {
  menu: IMenu;
  currentPage?: MenuPage;
  account?: string;
  accountPath?: string;
  error?: Error | unknown;
}

const { menu, currentPage: currentPageProp, account, accountPath, error } = Astro.props;

const isSinglePage = menu?.type === "single-page";
const isMultiPage = menu?.type === "multi-page";
let currentPage =
  currentPageProp ||
  (isSinglePage &&
    menu?.pages?.find((page: MenuPage) => page.id === menu?.mainPageId));
// Determine the route type based on available params
const isQrRoute = !!account;
const isPageView = !!currentPage || (isSinglePage && !menu?.mainPageId);

// Determine the route type for the dynamic routing
const routeType = isQrRoute ? "qr" : "v";
const identifier = isQrRoute ? (account as string) : (accountPath as string);

// Generate the base URL for navigation
const baseUrl = identifier && routeType ? `/${routeType}/${identifier}` : "";

const isPageNotFound = isPageView && !currentPage && menu;
const shouldRedirect = isPageNotFound || error;
const shouldShowHome = isMultiPage && !isPageView;
const shouldShowPage = isPageView && currentPage;
---

<Fragment>
  <title slot="head">{menu?.name || "Menu"}</title>
  <script slot="head" define:vars={{ baseUrl, shouldRedirect }} is:inline>
    if (shouldRedirect) {
      window.location.href = baseUrl;
    }
  </script>
  <script
    slot="head"
    is:inline
    src="https://cdn.jsdelivr.net/npm/@tailwindplus/elements@1"
    type="module"></script>
  <script slot="head" src="/src/scripts/dialog.js"></script>
  <div class="w-full">
    <div class="max-w-2xl mx-auto pb-8">
      {
        menu && (
          <>
            {/* Navigation for multi-page menus when not in page view */}
            {shouldShowHome && <Home menu={menu} baseUrl={baseUrl} />}

            {/* Main content area */}
            {/* Specific page view */}
            {shouldShowPage && (
              <Page
                baseUrl={baseUrl}
                id={currentPage.id}
                items={currentPage.items}
                menu={menu}
              />
            )}
            <Footer />
          </>
        )
      }
    </div>
  </div>
</Fragment>
